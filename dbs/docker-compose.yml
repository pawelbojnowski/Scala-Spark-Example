version: '2.2'
services:

  ScalaSparkExampleCassandra:
    image: cassandra:latest
    container_name: ScalaSparkExampleCassandra
    ports:
      - "9042:9042"
    environment:
      - "MAX_HEAP_SIZE=256M"
      - "HEAP_NEWSIZE=128M"
      - "CASSANDRA_USER=root"
      - "CASSANDRA_PASSWORD=root"
    restart: always
    volumes:
      - ./volumesData/cassandra_data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD", "cqlsh", "-u root", "-p root" ,"-e describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 10

  ScalaSparkExampleCassandraInit:
    container_name: ScalaSparkExampleCassandraInit
    image: cassandra:latest
    depends_on:
      ScalaSparkExampleCassandra:
        condition: service_healthy
    volumes:
      - ./init.cql:/init.cql
    command: /bin/bash -c "echo loading ScalaSparkExampleCassandra keyspace && cqlsh ScalaSparkExampleCassandra -f /init.cql"

  ScalaSparkExampleMySql:
    container_name: ScalaSparkExampleMySql
    image: 'mariadb:latest'
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - './volumesData/mysql_data:/var/lib/mysql'
      - "./init.sql:/docker-entrypoint-initdb.d/schema.sql:ro"
    ports:
      - '3306:3306'

  ScalaSparkExampleCockroachdb:
    container_name: ScalaSparkExampleCockroachdb
    image: cockroachdb/cockroach:latest
    volumes:
      - './volumesData/ScalaSparkExampleCockroachdb:/cockroach/cockroach-data'
    command: "start-single-node --insecure --logtostderr"
    ports:
      - "26257:26257"
      - "9090:9090"
    networks:
      cockroachdb_net2:
        aliases:
          - node_1

networks:
  cockroachdb_net2:
    driver: bridge